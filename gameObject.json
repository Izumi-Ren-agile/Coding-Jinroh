{"gameId":"Tue Aug 06 2024 11:07:22 GMT+0900 (日本標準時)","questionId":3,"questionText":"以下の仕様を満たす FindSecondLargestメソッドの作成 \\n仕様：・整数 n を受け取り、与えられている整数のリストの中でn 番目に大きい数を返すメソッド","initialCode":"import java.util.ArrayList; import java.util.Collections; import java.util.List;  public class Main {     public static void main(String[] args) { \t\t     \t\t    List<Integer> numbers = List.of(20, 40, 30, 50, 10);              // テストケース        System.out.println(findNthLargest(numbers, 1));  // 出力: 50 (1番目に大きい数)         System.out.println(findNthLargest(numbers, 2));  // 出力: 40 (2番目に大きい数)         System.out.println(findNthLargest(numbers, 3));  // 出力: 30 (3番目に大きい数)         System.out.println(findNthLargest(numbers, 4));  // 出力: 20 (4番目に大きい数)         System.out.println(findNthLargest(numbers, 5));  // 出力: 10 (5番目に大きい数)     }      // 与えられた整数リストからn番目に大きい数を返すメソッド     public static Integer findNthLargest(List<Integer> numbers, int n) {                  //　ここに実装                                                                                                   return null;     } }","answerCode":"import java.util.ArrayList; import java.util.Collections; import java.util.List;  public class Main {     public static void main(String[] args) {                   \t\t    List<Integer> numbers = List.of(20, 40, 30, 50, 10);              // テストケース         System.out.println(findNthLargest(numbers, 1));  // 出力: 50 (1番目に大きい数)         System.out.println(findNthLargest(numbers, 2));  // 出力: 40 (2番目に大きい数)         System.out.println(findNthLargest(numbers, 3));  // 出力: 30 (3番目に大きい数)         System.out.println(findNthLargest(numbers, 4));  // 出力: 20 (4番目に大きい数)         System.out.println(findNthLargest(numbers, 5));  // 出力: 10 (5番目に大きい数)     }      // 与えられた整数リストからn番目に大きい数を返すメソッド     public static Integer findNthLargest(List<Integer> numbers, int n) {         if (numbers == null || numbers.size() < n || n <= 0) {             throw new IllegalArgumentException(\"Invalid input\");         }          // リストのコピーを作成し、ソート         List<Integer> sortedList = new ArrayList<>(numbers);         Collections.sort(sortedList, Collections.reverseOrder());          // n番目に大きい数を返す         return sortedList.get(n - 1);     } }","initialPlayers":[{"id":0,"name":"こりん","isJinroh":false,"color":"lime","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":1,"name":"おぱあーい","isJinroh":false,"color":"pink","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":2,"name":"はうあはう","isJinroh":true,"color":"aqua","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":3,"name":"くｓづあｓぬ","isJinroh":false,"color":"purple","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"}],"players":[{"id":0,"name":"こりん","isJinroh":false,"color":"lime","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":1,"name":"おぱあーい","isJinroh":false,"color":"pink","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":2,"name":"はうあはう","isJinroh":true,"color":"aqua","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"},{"id":3,"name":"くｓづあｓぬ","isJinroh":false,"color":"purple","isAlive":true,"isPM":false,"yourMission":[],"voted":0,"imagePath":"/images/image"}],"presentPlayer":0,"editor":"import java.util.ArrayList; import java.util.Collections; import java.util.List;  public class Main {     public static void main(String[] args) { \t\t     \t\t    List<Integer> numbers = List.of(20, 40, 30, 50, 10);              // テストケース        System.out.println(findNthLargest(numbers, 1));  // 出力: 50 (1番目に大きい数)         System.out.println(findNthLargest(numbers, 2));  // 出力: 40 (2番目に大きい数)         System.out.println(findNthLargest(numbers, 3));  // 出力: 30 (3番目に大きい数)         System.out.println(findNthLargest(numbers, 4));  // 出力: 20 (4番目に大きい数)         System.out.println(findNthLargest(numbers, 5));  // 出力: 10 (5番目に大きい数)     }      // 与えられた整数リストからn番目に大きい数を返すメソッド     public static Integer findNthLargest(List<Integer> numbers, int n) {                  //　ここに実装                                                                                                   return null;     } }","editorHistory":[{"name":"初期コード","code":"import java.util.ArrayList; import java.util.Collections; import java.util.List;  public class Main {     public static void main(String[] args) { \t\t     \t\t    List<Integer> numbers = List.of(20, 40, 30, 50, 10);              // テストケース        System.out.println(findNthLargest(numbers, 1));  // 出力: 50 (1番目に大きい数)         System.out.println(findNthLargest(numbers, 2));  // 出力: 40 (2番目に大きい数)         System.out.println(findNthLargest(numbers, 3));  // 出力: 30 (3番目に大きい数)         System.out.println(findNthLargest(numbers, 4));  // 出力: 20 (4番目に大きい数)         System.out.println(findNthLargest(numbers, 5));  // 出力: 10 (5番目に大きい数)     }      // 与えられた整数リストからn番目に大きい数を返すメソッド     public static Integer findNthLargest(List<Integer> numbers, int n) {                  //　ここに実装                                                                                                   return null;     } }"}],"missions":[1,6,13,14,17,22,25,27,42,46,48,54,58,64,67,71,79,82,83,95],"nextMissionIndex":0,"presentDay":1,"maxDay":4,"gamePhase":"night","presentCodingTurn":1,"maxCodingTurn":2,"codingMaxStringNum":2000,"codingMaxTime":60,"meetingmaxTime":120,"isRandom":false,"maxMissionNum":3,"codeLanguage":"java","startingTurn":0}